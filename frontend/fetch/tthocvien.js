// tthocvien.js
import {
  fetchKhoaHoc,
  fetchHocVien,
  fetchHoaDonWithIdhocvien,
  fetchChiTiethocvien,
  fetchDiemSovoiIdHocvien
} from './get.js';

import { addChiTietHocVien } from './add.js';
import {RemoveHoaDon, removeChiTietHocvien, RemoveHocvien} from './delete.js';

let id = "";
let khoahocDaDangKy = [];
let currentPage = 1;
const limit = 5;

document.addEventListener('DOMContentLoaded', async () => {
  const params = new URLSearchParams(window.location.search);
  id = params.get('id');
  // alert(id);

  if (!id) {
    alert("Kh√¥ng t√¨m th·∫•y ID h·ªçc vi√™n.");
    return;
  }
  

  const data = await fetchHocVien(id);
  if (!data || data.length === 0) {
    alert("Kh√¥ng t√¨m th·∫•y th√¥ng tin h·ªçc vi√™n.");
    return;
  }

  await HienThiThongTin(data);
  await HienThiListKhoaHoc();
  await HienThiDiem(id, currentPage);
});

// ======================= Th√¥ng tin =======================
let user  ="";
async function HienThiThongTin(data) {
  const hocvien = data[0];
  user = hocvien.user;
    document.getElementById('student-info').innerHTML = `
    <h2>Th√¥ng tin h·ªçc vi√™n</h2>
    <p><strong>H·ªç v√† t√™n:</strong> ${hocvien.hoten}</p>
    <p><strong>M√£ h·ªçc vi√™n:</strong> ${hocvien.idhocvien}</p>
    <p><strong>S·ªë ƒëi·ªán tho·∫°i:</strong> ${hocvien.sdt}</p>
  `;

  khoahocDaDangKy = data.map(item => item.idkhoahoc).filter(Boolean);

  const hoadon = await fetchHoaDonWithIdhocvien(hocvien.idhocvien);
  HienThiHoaDon(hoadon);

  const chitiethocvien = await fetchChiTiethocvien(hocvien.idhocvien);
  if (chitiethocvien?.length > 0) {
    HienThiKhoaHoc(chitiethocvien);
    const divdiem= document.getElementById('diem');
  divdiem.innerHTML=`
    <!-- ƒêi·ªÉm s·ªë -->
    <div id="diemhocvien" class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <h3 class="mb-0">üìä ƒêi·ªÉm s·ªë c·ªßa h·ªçc vi√™n</h3>
            <button onclick="themDiem()" class="btn btn-primary">Ch·ªânh s·ª≠a ƒëi·ªÉm</button>
        </div>
        <table class="table table-bordered table-striped">
            <thead class="table-light">
                <tr>
                    <th>T√™n kh√≥a h·ªçc</th>
                    <th>T√™n h·ªçc vi√™n</th>
                    <th>K·ª≥ thi</th>
                    <th>ƒêi·ªÉm s·ªë</th>
                    <th>Ghi ch√∫</th>
                  
                </tr>
            </thead>
            <tbody id="scoreTableBody">
                <!-- D·ªØ li·ªáu ƒëi·ªÉm s·ªë s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y -->
            </tbody>
        </table>
    </div>

    <!-- Ph√¢n trang -->
    <div id="pagination" class="text-center my-3"></div>`;
  } else {
    document.getElementById('student-khoc').innerHTML = `
      <h3>üìò Chi ti·∫øt kh√≥a h·ªçc</h3>
      <div style="font-style: italic; color: gray;">H·ªçc vi√™n ch∆∞a tham gia kh√≥a h·ªçc n√†o.</div>
    `;
  }
}

function HienThiHoaDon(hoadon) {
  const container = document.getElementById('student-hdon');
  if (!hoadon?.length) {
    container.innerHTML = '<p style="font-style: italic; color: gray;">Kh√¥ng c√≥ h√≥a ƒë∆°n.</p>';
    return;
  }

  container.innerHTML = `
    <h3>Chi ti·∫øt h√≥a ƒë∆°n</h3>
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>M√£ h√≥a ƒë∆°n</th>
          <th>T√™n h√≥a ƒë∆°n</th>
          <th>Th·ªùi gian l·∫≠p</th>
          <th>Th√†nh ti·ªÅn</th>
          <th>Thao t√°c</th>
        </tr>
      </thead>
      <tbody>
        ${hoadon.map(h => `
          <tr>
            <td>${h.idhoadon}</td>
            <td>${h.tenhoadon}</td>
            <td>${h.thoigianlap}</td>
            <td>${h.thanhtien}</td>
            <td>
              <button onclick="editHoaDon(${h.idhoadon})">Edit</button>
              <button onclick="removeHoaDon(${h.idhoadon})">Remove</button>
            </td>
          </tr>`).join('')}
      </tbody>
    </table>
  `;
}

function HienThiKhoaHoc(data) {
  const params = new URLSearchParams(window.location.search);
  idhocvien = params.get('id');
  document.getElementById('student-khoc').innerHTML = `
    <h3>Chi ti·∫øt kh√≥a h·ªçc</h3>
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>M√£ KH</th>
          <th>T√™n KH</th>
          <th>Thao t√°c</th>
        </tr>
      </thead>
      <tbody>
        ${data.map(kh => `
          <tr>
            <td>${kh.idkhoahoc}</td>
            <td>${kh.tenkhoahoc}</td>
            <td>
          <button onclick="editkhoahoc(${kh.idkhoahoc}, '${kh.images}')">Edit</button>

              <button onclick="removekhoahoc(${kh.idkhoahoc}, ${idhocvien})">Remove</button>
            </td>
          </tr>`).join('')}
      </tbody>
    </table>
  `;
}

async function HienThiListKhoaHoc() {
  const select = document.getElementById('dky');
  const data = await fetchKhoaHoc();
  const list = Array.isArray(data.data) ? data.data : data;

  const chuaDangKy = list.filter(kh => !khoahocDaDangKy.includes(kh.idkhoahoc));
  select.innerHTML = chuaDangKy.length === 0
    ? `<option disabled>ƒê√£ ƒëƒÉng k√Ω h·∫øt c√°c kh√≥a h·ªçc.</option>`
    : chuaDangKy.map(kh => `<option value="${kh.idkhoahoc}">${kh.tenkhoahoc}</option>`).join('');
}
 function themDiem() {
        const params = new URLSearchParams(window.location.search);
        const idHocVien = params.get("id");

        if (idHocVien) {
            window.location.href = `diemso.html?idhocvien=${idHocVien}`;
        } else {
            alert("Kh√¥ng t√¨m th·∫•y ID h·ªçc vi√™n.");
        }
}
async function themkhoahoc() {
  const idkhoahoc = document.getElementById('dky').value;
  if (!idkhoahoc) return alert("Vui l√≤ng ch·ªçn kh√≥a h·ªçc.");

  const data = {
    idhocvien: id,
    idkhoahoc,
    ketquahoctap: "chua co",
    tinhtranghocphi: "chua co"
  };

  try {
    await addChiTietHocVien(data);
    const updatedHocVien = await fetchHocVien(id);
    await HienThiThongTin(updatedHocVien);
    await HienThiListKhoaHoc();
    alert("Th√™m kh√≥a h·ªçc th√†nh c√¥ng!");
  } catch (error) {
    console.error(error);
    alert("Th√™m kh√≥a h·ªçc th·∫•t b·∫°i.");
  }
}

// ======================= Hi·ªÉn th·ªã ƒêi·ªÉm =======================

async function HienThiDiem(id, page = 1) {
  try {
    const res = await fetchDiemSovoiIdHocvien(id);
    const allScores = Array.isArray(res) ? res : [];
    const totalPages = Math.ceil(allScores.length / limit);
    const start = (page - 1) * limit;
    const scores = allScores.slice(start, start + limit);

    const tbody = document.getElementById('scoreTableBody');
    tbody.innerHTML = scores.map(score => `
      <tr>
        <td>${score.tenkhoahoc}</td>
        <td>${score.hoten}</td>
        <td>${score.kythi}</td>
        <td>${score.diemso}</td>
        <td>${score.ghichu || ''}</td>
       
      </tr>`).join('');

    renderScorePagination(page, totalPages);
  } catch (error) {
    console.error("L·ªói khi t·∫£i ƒëi·ªÉm:", error);
  }
}

document.addEventListener('click', (e) => {
  if (e.target.classList.contains("edit-btn")) {
    const scoreId = e.target.getAttribute("data-id");
    window.location.href = `diemso.html?idhocvien=${scoreId}`;
  }
});

function renderScorePagination(currentPage, totalPages) {
  const container = document.getElementById('pagination');
  container.innerHTML = '';

  const prevBtn = createPaginationButton("¬´ Tr∆∞·ªõc", currentPage > 1, () => HienThiDiem(id, currentPage - 1));
  container.appendChild(prevBtn);

  for (let i = 1; i <= totalPages; i++) {
    const btn = createPaginationButton(i, true, () => HienThiDiem(id, i));
    if (i === currentPage) btn.classList.add('active');
    container.appendChild(btn);
  }

  const nextBtn = createPaginationButton("Sau ¬ª", currentPage < totalPages, () => HienThiDiem(id, currentPage + 1));
  container.appendChild(nextBtn);
}

function createPaginationButton(text, enabled, onClick) {
  const btn = document.createElement('button');
  btn.textContent = text;
  btn.disabled = !enabled;
  btn.className = 'pagination-button btn btn-outline-primary btn-sm m-1';
  btn.onclick = onClick;
  return btn;
}

// ======================= G·∫Øn h√†m to√†n c·ª•c =======================
window.themkhoahoc = themkhoahoc;
async function editkhoahoc(id, image){
  window.location.href=`taovaquanlykhoahoc.html?idkhoahoc=${id}&&images=${image}`
}


async function removeHoaDon(id) {
    console.log(" asdfasd" + id);

  const confirmDelete = confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a h√≥a ƒë∆°n n√†y?");
  if (!confirmDelete) return; // Ng∆∞·ªùi d√πng ch·ªçn 'H·ªßy'

  const res = await RemoveHoaDon(id);
  if (res) {
    alert("X√≥a th√†nh c√¥ng");
    await renderHoaDonTable(currentPage); // N·∫øu mu·ªën load l·∫°i b·∫£ng sau khi x√≥a
  } else {
    alert("X√≥a th·∫•t b·∫°i");
  }
}

async function removekhoahoc(idkhoahoc, idhocvien){
   const confirmDelete = confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a h·ªçc vi√™n kh·ªèi kh√≥a h·ªçc n√†y?");
  if (!confirmDelete) return; // Ng∆∞·ªùi d√πng ch·ªçn 'H·ªßy'
  console.log(idkhoahoc +" asdfasd" + idhocvien);
  const res = await removeChiTietHocvien(idkhoahoc, idhocvien);
  console.log(res);
  if (res) {
    alert("X√≥a th√†nh c√¥ng");
    await renderHoaDonTable(currentPage); // N·∫øu mu·ªën load l·∫°i b·∫£ng sau khi x√≥a
  } else {
    alert("X√≥a th·∫•t b·∫°i");
  }
}
async function editHoaDon(id){
window.location.href=`hoadon.html?idhoadon=${id}`;
}
window.edit = () => window.location.href = `qltaikhoan.html?user=${user}&role=0`;
window.editkhoahoc = editkhoahoc;
window.removekhoahoc = removekhoahoc;
window.editHoaDon = editHoaDon;
window.removeHoaDon = removeHoaDon;
window.themDiem = themDiem;
window.remove=remove;

async function remove(){
  const params = new URLSearchParams(window.location.search);
  const idhocvien = params.get('id');
  const res = await RemoveHocvien(idhocvien);
  if (res){
    alert("xoa thanh cong");
    window.location.href='danhsachhocvien.html';
  }
}